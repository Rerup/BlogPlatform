@using BlogPlatform.Services.Contracts
@using Domain.BlogDomain
@inject IClientCommentService CommentService
@inject IJSRuntime JsRuntime

<div class="container">
    <h4>Comment section</h4>
    <div class="row">
        @foreach (var comment in @comments)
        {
            <div class="card mb-3 mt-3">
                <div class="card-body">
                    <p class="card-text">@comment.Content</p>
                    <div class="card-footer">
                        <div>
                            <i class="bi bi-calendar"></i> commented: @comment.CreatedAt.ToString("dd-MM-yyyy")
                        </div>

                        <div class="text-danger action" @onclick="@(async () => await DeleteComment(comment.Id))">
                            <i class="bi bi-trash"></i> Delete
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public ICollection<Comment> comments { get; set; }

    [Parameter]
    public EventCallback onDeleteComment { get; set; }

    private async Task DeleteComment(int commentId)
    {
        var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you wish to delete the comment?");

        if (confirmed)
        {
            await CommentService.DeleteCommentAsync(commentId);

            await onDeleteComment.InvokeAsync();
        }
    }
}
